is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

#======================== options
set -g escape-time 0
set -g display-time 0
set -g status-interval 0
set -g history-limit 50000
set -g focus-events on
set -g default-terminal 'xterm-256color'
set -g renumber-windows on
set -g set-clipboard off
set -ga terminal-overrides ',foot:RGB'
set -g default-command '/bin/zsh'
set -g default-shell '/bin/zsh'
set -g allow-rename off


# vim
set -g mouse on
set -g mode-keys vi
set -g status on

#======================== keybinds

# prefix
unbind C-b
set -g prefix C-a
bind -n C-a send-prefix


# navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind c kill-pane
bind b break-pane -d

bind -r H swap-pane -s '{left-of}'
bind -r J swap-pane -s '{down-of}'
bind -r K swap-pane -s '{up-of}'
bind -r L swap-pane -s '{right-of}'

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind -r Left resize-pane -L 5
bind -r Up resize-pane -D 5
bind -r Down resize-pane -U 5
bind -r Right resize-pane -R 5

bind w kill-window
bind u previous-window
bind i next-window

bind -r U swap-window -t -1\; select-window -t -1
bind -r I swap-window -t +1\; select-window -t +1

bind t new-window -c "#{pane_current_path}"

bind -r ( switch-client -p
bind -r ) switch-client -n

# vim integration
# bind -n C-w if-shell "$is_vim" 'send-keys C-w' 'switch-client -T prefix_w'
#
# bind -Tprefix_w h select-pane -L
# bind -Tprefix_w j select-pane -D
# bind -Tprefix_w k select-pane -U
# bind -Tprefix_w l select-pane -R
# bind -Tprefix_w c kill-pane
#
# bind -Tprefix_w -r H swap-pane -s '{left-of}'
# bind -Tprefix_w -r J swap-pane -s '{down-of}'
# bind -Tprefix_w -r K swap-pane -s '{up-of}'
# bind -Tprefix_w -r L swap-pane -s '{right-of}'
#
# bind -Tprefix_w v split-window -h -c '#{pane_current_path}'
# bind -Tprefix_w s split-window -v -c '#{pane_current_path}'
#
# bind -Tprefix_w -r Left resize-pane -L 5
# bind -Tprefix_w -r Up resize-pane -D 5
# bind -Tprefix_w -r Down resize-pane -U 5
# bind -Tprefix_w -r Right resize-pane -R 5
#
# bind -Tprefix_w w kill-window
# bind -Tprefix_w u previous-window
# bind -Tprefix_w i next-window
#
# bind -Tprefix_w -r U swap-window -t -1\; select-window -t -1
# bind -Tprefix_w -r I swap-window -t +1\; select-window -t +1
#
# bind -Tprefix_w t new-window -c "#{pane_current_path}"
#
# bind -Tprefix_w -r ( switch-client -p
# bind -Tprefix_w -r ) switch-client -n

# copy paste
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'

#======================== themes
# status
set -g status-position 'top'
set -g status-style 'bg=#292e42, fg=#FFFFFF'
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-style NONE
set -g status-right-style NONE
set -g status-left "#[fg=#ffffff,bg=#292e42,bold] #S #[fg=#ffffff,bg=#292e42,nobold,nounderscore,noitalics]"
set -g status-right '#(gitmux "#{pane_current_path}")'
set -g window-status-style 'bg=#292e42, fg=default'
set -g window-status-current-style 'bg=#ffffff,fg=#292e42'
set -g window-status-separator ""
set -g window-status-format " #I #W "
set -g window-status-current-format "#[fg=#292e42,bg=#ffffff] #I #W #[fg=#ffffff,bg=#292e42,nobold,nounderscore,noitalics]"
# message
set -g message-style "fg=#FFFFFF,bg=#292e42"
set -g message-command-style "fg=#FFFFFF,bg=#292e42"
# pane
set -g pane-border-style "bg=default fg=white"
set -g pane-active-border-style "bg=default fg=#292e42"

#======================== plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'akohlbecker/aw-watcher-tmux'
# set -g @plugin 'tmux-plugins/tmux-cpu'

# tpm
# run '~/.repo/tpm/tpm'
